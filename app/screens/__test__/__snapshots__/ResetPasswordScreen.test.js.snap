// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Reset Password Reset password screen snapshot should match 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    dataSet={{}}
    style={{}}
  >
    <View
      dataSet={{}}
      style={{}}
    >
      <View
        dataSet={{}}
        style={
          {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          }
        }
      >
        <View
          dataSet={{}}
          isInvalid={false}
          isRequired={true}
          style={
            {
              "marginTop": 20,
              "maxWidth": "80%",
              "width": "100%",
            }
          }
        >
          <View
            dataSet={{}}
            style={
              {
                "alignItems": "flex-start",
              }
            }
          >
            <View
              dataSet={{}}
              feedbackId="field-3-feedback"
              hasFeedbackText={true}
              hasHelpText={true}
              helpTextId="field-3-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-3-label"
              nativeID="field-3-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={{}}
                style={
                  {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": "Helvetica",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Email
              </Text>
              <Text
                dataSet={{}}
                style={
                  {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              dataSet={{}}
              style={{}}
            />
            <View
              dataSet={{}}
              isFocused={false}
              style={
                {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 25,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 50,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
            >
              <TextInput
                accessibilityDescribedBy="field-3-feedback field-3-helptext"
                accessibilityRequired={true}
                accessible={true}
                dataSet={{}}
                disabled={false}
                editable={true}
                isRequired={true}
                nativeID="field-3-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="jess@gmail.com"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={true}
                secureTextEntry={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "color": "#484848",
                    "flex": 1,
                    "fontFamily": "Helvetica",
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                value=""
              />
            </View>
            <View
              dataSet={{}}
              style={{}}
            />
            <View
              dataSet={{}}
              style={{}}
            />
            <View
              dataSet={{}}
              feedbackId="field-3-feedback"
              hasFeedbackText={true}
              hasHelpText={true}
              helpTextId="field-3-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-3-label"
              nativeID="field-3-feedback"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                {
                  "marginTop": 8,
                }
              }
            />
          </View>
        </View>
        <View
          dataSet={{}}
          isRequired={true}
          style={
            {
              "marginTop": 20,
              "maxWidth": "80%",
              "width": "100%",
            }
          }
        >
          <View
            dataSet={{}}
            style={{}}
          >
            <View
              dataSet={{}}
              feedbackId="field-2-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-2-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-2-label"
              nativeID="field-2-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={{}}
                style={
                  {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": "Helvetica",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Role
              </Text>
              <Text
                dataSet={{}}
                style={
                  {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              dataSet={{}}
              style={{}}
            />
            <View
              accessibilityLabel="Select Role"
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              dataSet={{}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={{}}
            >
              <View
                dataSet={{}}
                isFocused={false}
                style={
                  {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 25,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "height": 50,
                    "minHeight": "3%",
                    "minWidth": "100%",
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessibilityRequired={true}
                  accessible={true}
                  aria-hidden={true}
                  dataSet={{}}
                  disabled={false}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  isRequired={true}
                  nativeID="field-2-input"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Select role"
                  placeholderTextColor="#6e6969"
                  pointerEvents="none"
                  readOnly={false}
                  required={true}
                  secureTextEntry={false}
                  selection={
                    {
                      "start": 0,
                    }
                  }
                  style={
                    {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": "Avenir",
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  value="Supervisor"
                />
                <View
                  dataSet={{}}
                  style={{}}
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  color={4285756275}
                  dataSet={{}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    [
                      {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      {
                        "color": "#737373",
                        "height": 24,
                        "marginRight": 12,
                        "paddingBottom": 4,
                        "paddingLeft": 4,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor={4285756275}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                        fill={
                          [
                            2,
                          ]
                        }
                        propList={
                          [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          dataSet={{}}
          style={{}}
        />
        <View
          dataSet={{}}
          style={
            [
              {},
              {
                "alignSelf": "center",
                "paddingVertical": 30,
                "width": "50%",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#019192",
                "borderRadius": 25,
                "justifyContent": "center",
                "opacity": 1,
                "padding": 15,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#F3ECE4",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textTransform": "uppercase",
                }
              }
            >
              Reset
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": [
            {
              "translateY": 0,
            },
            {
              "translateX": 0,
            },
            {
              "scale": 1,
            },
            {
              "scaleX": 1,
            },
            {
              "scaleY": 1,
            },
            {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={{}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": [
            {
              "translateY": 0,
            },
            {
              "translateX": 0,
            },
            {
              "scale": 1,
            },
            {
              "scaleX": 1,
            },
            {
              "scaleY": 1,
            },
            {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={{}}
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={{}}
          pointerEvents="box-none"
          style={
            {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              {
                "transform": [
                  {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={{}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                {
                  "paddingBottom": 8,
                  "paddingTop": 8,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={{}}
              onAccessibilityEscape={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={{}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={{}}
                  style={
                    {
                      "backgroundColor": "#737373",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  [
                    {},
                    {
                      "dataSet": {},
                    },
                    {},
                  ]
                }
                data={
                  [
                    {
                      "label": "Supervisor",
                      "value": "Supervisor",
                    },
                    {
                      "label": "Guardian",
                      "value": "Guardian",
                    },
                    {
                      "label": "Doctor",
                      "value": "Doctor",
                    },
                    {
                      "label": "Caregiver",
                      "value": "Caregiver",
                    },
                    {
                      "label": "Nurse",
                      "value": "Nurse",
                    },
                  ]
                }
                dataSet={{}}
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={[]}
                style={
                  {
                    "width": "100%",
                  }
                }
                viewabilityConfigCallbackPairs={[]}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        {
                          "selected": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={{}}
                      focusable={true}
                      label="Supervisor"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Supervisor"
                    >
                      <View
                        dataSet={{}}
                        style={
                          {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={{}}
                          style={{}}
                        >
                          <Text
                            dataSet={{}}
                            style={
                              {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Supervisor
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={{}}
                      focusable={true}
                      label="Guardian"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Guardian"
                    >
                      <View
                        dataSet={{}}
                        style={
                          {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={{}}
                          style={{}}
                        >
                          <Text
                            dataSet={{}}
                            style={
                              {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Guardian
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={{}}
                      focusable={true}
                      label="Doctor"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Doctor"
                    >
                      <View
                        dataSet={{}}
                        style={
                          {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={{}}
                          style={{}}
                        >
                          <Text
                            dataSet={{}}
                            style={
                              {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Doctor
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={{}}
                      focusable={true}
                      label="Caregiver"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Caregiver"
                    >
                      <View
                        dataSet={{}}
                        style={
                          {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={{}}
                          style={{}}
                        >
                          <Text
                            dataSet={{}}
                            style={
                              {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Caregiver
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={{}}
                      focusable={true}
                      label="Nurse"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Nurse"
                    >
                      <View
                        dataSet={{}}
                        style={
                          {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={{}}
                          style={{}}
                        >
                          <Text
                            dataSet={{}}
                            style={
                              {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Nurse
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
